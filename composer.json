{
    "name": "amercier/laravel-task-list",
    "description": "Task List using Laravel framework.",
    "keywords": ["todo", "todoapp", "laravel", "framework"],
    "license": "MIT",
    "type": "project",
    "require": {
        "php": ">=7.0.0",
        "doctrine/dbal": "^2.5",
        "fideloper/proxy": "~3.3",
        "laravel/framework": "5.5.*"
    },
    "require-dev": {
        "dg/ftp-deployment": "^2.7",
        "filp/whoops": "~2.0",
        "fzaninotto/faker": "~1.4",
        "laravel/dusk": "^2.0",
        "laravel/tinker": "~1.0",
        "laravel/homestead": "^6.5",
        "mockery/mockery": "~1.0",
        "phpunit/phpunit": "~6.0",
        "squizlabs/php_codesniffer": "^3.1"
    },
    "autoload": {
        "classmap": [
            "database/seeds",
            "database/factories"
        ],
        "psr-4": {
            "App\\": "app/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": [
            ]
        }
    },
    "scripts": {
        "pre-install-cmd": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php -r \"file_exists('.env.staging') || copy('.env.staging.example', '.env.staging');\"",
            "@php -r \"file_exists('.env.testing') || copy('.env.testing.example', '.env.testing');\""
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover"
        ],
        "development": [
            "@php artisan key:generate",
            "@php artisan key:generate --env=staging",
            "@php artisan key:generate --env=testing",
            "touch database/database.sqlite",
            "@php artisan migrate:refresh --seed",
            "npm install",
            "npm run development"
        ],
        "test": [
            "phpunit --colors=always",
            "@php artisan dusk --colors=always"
        ],
        "homestead-init": [
            "vagrant up --provision",
            "vagrant ssh -c \"cd code && php artisan migrate:refresh --seed\""
        ],
        "homestead-test": [
            "vagrant up --provision",
            "vagrant ssh -c \"cd code && composer run test\""
        ],
        "lint": [
            "phpcs --extensions=php \"--ignore=vendor/*,node_modules/*,bootstrap/cache/*,storage/*,*.blade.php,public/index.php\"  --standard=PSR1 .",
            "phpcs --extensions=php \"--ignore=vendor/*,node_modules/*,bootstrap/cache/*,storage/*,*.blade.php,public/index.php\"  --standard=PSR2 .",
            "npm run lint"
        ],
        "deploy": [
            "@php artisan cache:clear",
            "@php artisan config:clear",
            "@php -r \"copy('.env.production.example', '.env.production');\"",
            "[ -z \"$DEPLOY_DB_HOST\" ] && echo ERROR: missing \\'DEPLOY_DB_HOST\\' environment variable >&2 && exit 1 || sed -i'' s/DB_HOST=.*/DB_HOST=$DEPLOY_DB_HOST/ .env.production",
            "[ -z \"$DEPLOY_DB_PORT\" ] && echo ERROR: missing \\'DEPLOY_DB_PORT\\' environment variable >&2 && exit 1 || sed -i'' s/DB_PORT=.*/DB_PORT=$DEPLOY_DB_PORT/ .env.production",
            "[ -z \"$DEPLOY_DB_CONNECTION\" ] && echo ERROR: missing \\'DEPLOY_DB_CONNECTION\\' environment variable >&2 && exit 1 || sed -i'' s/DB_CONNECTION=.*/DB_CONNECTION=$DEPLOY_DB_CONNECTION/ .env.production",
            "[ -z \"$DEPLOY_DB_DATABASE\" ] && echo ERROR: missing \\'DEPLOY_DB_DATABASE\\' environment variable >&2 && exit 1 || sed -i'' s/DB_DATABASE=.*/DB_DATABASE=$DEPLOY_DB_DATABASE/ .env.production",
            "[ -z \"$DEPLOY_DB_USERNAME\" ] && echo ERROR: missing \\'DEPLOY_DB_USERNAME\\' environment variable >&2 && exit 1 || sed -i'' s/DB_USERNAME=.*/DB_USERNAME=$DEPLOY_DB_USERNAME/ .env.production",
            "[ -z \"$DEPLOY_DB_PASSWORD\" ] && echo ERROR: missing \\'DEPLOY_DB_PASSWORD\\' environment variable >&2 && exit 1 || sed -i'' s/DB_PASSWORD=.*/DB_PASSWORD=$DEPLOY_DB_PASSWORD/ .env.production",
            "npm run production",
            "deployment deployment.php",
            "curl --fail --silent --show-error http://laravel-task-list.amercier.com/post-deployment.php",
            "curl --fail --silent --show-error http://laravel-task-list.amercier.com/ >/dev/null"
        ],
        "post-deploy": [
            "@php artisan down || exit 0",
            "@php composer.phar install --no-interaction --prefer-dist --no-dev --optimize-autoloader",
            "@php artisan key:generate --no-interaction --force",
            "@php artisan cache:clear",
            "@php artisan config:cache",
            "@php artisan migrate:install || exit 0",
            "@php artisan migrate --force",
            "@php artisan up"
        ]
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true
    }
}
